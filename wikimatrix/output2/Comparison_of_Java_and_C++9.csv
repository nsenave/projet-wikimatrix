"C++","Java"
"C++ is compiled directly to  which is then executed directly by the . C++ is compiled directly to  which is then executed directly by the . machine codeC++ is compiled directly to  which is then executed directly by the . C++ is compiled directly to  which is then executed directly by the . machine codecentral processing unit","Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineinterpretsJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineinterpretsjust-in-time compilationJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineinterpretsJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. Java is compiled to  which the  (JVM) then  at runtime. Actual Java implementations do  to native machine code. Alternatively, the  can compile directly to machine code. byte-codeJava virtual machineinterpretsjust-in-time compilationGNU Compiler for Java"
